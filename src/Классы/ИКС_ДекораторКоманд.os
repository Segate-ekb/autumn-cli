#Использовать decorator
#Использовать autumn

Перем Рефлектор;

&Желудь
Процедура ПриСозданииОбъекта()
	Рефлектор = Новый Рефлектор();
КонецПроцедуры

Функция СоздатьКомандуПоАннотациямОбъекта(ДанныеЖелудя) Экспорт
	Декоратор = Новый ПостроительДекоратора(ДанныеЖелудя.Желудь);

	ПодготовитьОписаниеКоманды(Декоратор, ДанныеЖелудя);
	ПодготовитьВыполнитьКоманду(Декоратор, ДанныеЖелудя);

	// т = Декоратор.ТекстСценария();

	Возврат Декоратор.Построить();
КонецФункции

Процедура ПодготовитьОписаниеКоманды(ПостроительДекоратора, ДанныеЖелудя)
	Если ЕстьМетод(ДанныеЖелудя.Желудь, "ОписаниеКоманды") Тогда
		Возврат;
	КонецЕсли;

	ТелоМетода = Новый Массив;
	Свойства = ДанныеЖелудя.ОпределениеЖелудя.Свойства();

	Для Каждого Свойство из Свойства Цикл
		Аннотация = РаботаСАннотациями.ПолучитьАннотацию(Свойство, "Опция");
		Если Аннотация = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТелоМетода.Добавить(СтрШаблон("КомандаПриложения.Опция(""%1"", """", ""%2"");", 
							РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(Аннотация, "Имя"),
							РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(Аннотация, "Описание")));
	КонецЦикла;

	Метод = Новый Метод("ОписаниеКоманды").Публичный();
	Метод.Параметр(Новый ПараметрМетода("КомандаПриложения").ПоЗначению());
	Метод.ТелоМетода(СтрСоединить(ТелоМетода, Символы.ПС));

	ПостроительДекоратора.Метод(Метод);
КонецПроцедуры

Процедура ПодготовитьВыполнитьКоманду(ПостроительДекоратора, ДанныеЖелудя)
	Если ЕстьМетод(ДанныеЖелудя.Желудь, "ВыполнитьКоманду") Тогда
		Возврат;
	КонецЕсли;

	// Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	// 	ИмяПользователя = КомандаПриложения.ЗначениеОпции("name");
	// 	СформироватьТекстПриветствия();
	// КонецПроцедуры

	ТелоМетода = Новый Массив;
	Свойства = ДанныеЖелудя.ОпределениеЖелудя.Свойства();

	Для Каждого Свойство из Свойства Цикл
		Аннотация = РаботаСАннотациями.ПолучитьАннотацию(Свойство, "Опция");
		Если Аннотация = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ИмяОпции = СтрРазделить(РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(Аннотация, "Имя"), " ")[0];

		ТелоМетода.Добавить(СтрШаблон("%1 = КомандаПриложения.ЗначениеОпции(""%2"");", 
							Свойство.Имя,
							ИмяОпции));
	КонецЦикла;

	МетодыВыполненияКоманды = РаботаСАннотациями.НайтиМетодыСАннотацией(ДанныеЖелудя.ОпределениеЖелудя.Методы(), "ВыполнениеКоманды");

	Для каждого МетодВыполненияКоманды Из МетодыВыполненияКоманды Цикл
		ТелоМетода.Добавить(МетодВыполненияКоманды.Имя + "();");
	КонецЦикла;

	Метод = Новый Метод("ВыполнитьКоманду").Публичный();
	Метод.Параметр(Новый ПараметрМетода("КомандаПриложения").ПоЗначению());
	Метод.ТелоМетода(СтрСоединить(ТелоМетода, Символы.ПС));

	ПостроительДекоратора.Метод(Метод);

КонецПроцедуры

Функция ЕстьМетод(Команда, ИмяМетода)
	Возврат Рефлектор.МетодСуществует(Команда, ИмяМетода);
КонецФункции